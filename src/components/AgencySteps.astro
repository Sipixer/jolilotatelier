---
import FlecheIcon from './Icons/FlecheIcon.astro';
import Submark from './Icons/Submark.astro';
import OneService, { type Service } from './subcomponents/OneService.astro';
import SubTitle from './subcomponents/SubTitle.astro';

export type Props = AgencyStepsProps;

export type AgencyStepsProps = {
  bgColor?: string;
  title?: string;
  services?: Service[];
  titleColor?: string;
  submark?: boolean;
};

const { bgColor, services, titleColor, title = 'jolilot c’est aussi \n simple que ça !', submark = true } = Astro.props;
const areServices = services && services.length > 0;
---

{
  submark && (
    <div
      class="flex md:justify-end text-orange relative -my-3 justify-center"
      style={{
        color: bgColor,
      }}
    >
      <div class="flex justify-center items-center rounded-full bg-background z-10 md:-translate-x-1/2">
        <Submark />
      </div>
      <div
        class="absolute h-12 bg-marron_fonce top-full inset-0 -translate-y-full"
        style={{
          backgroundColor: bgColor,
        }}
      />
    </div>
  )
}
<div
  class="bg-marron_fonce text-white pb-8 pt-16 flex flex-col gap-y-14"
  style={{
    backgroundColor: bgColor,
    color: titleColor,
  }}
>
  <SubTitle title={title} />
  {
    areServices && (
      <div class="relative flex w-full flex-col items-center glide glidesteps gap-y-8">
        <div class="w-full max-w-[1800px] px-4 md:px-20">
          <div class="glide__track" data-glide-el="track">
            <ul class="glide__slides px-3">
              {services?.map((service) => (
                <OneService {...service} />
              ))}
            </ul>
          </div>
        </div>

        <div data-glide-el="controls" class="flex gap-4">
          <button data-glide-dir="<" aria-label="Precedent" class="rotate-180">
            <FlecheIcon />
          </button>
          <button data-glide-dir=">" aria-label="Suivant">
            <FlecheIcon />
          </button>
        </div>
      </div>
    )
  }
</div>

<style>
  .text-orange {
    color: #cc9f5c;
  }
</style>

<script is:inline data-astro-rerun>
  new Glide('.glidesteps', {
    startAt: 0,
    perView: 4,
    type: 'carousel',
    gap: 30,
    breakpoints: {
      1280: {
        perView: 3,
      },
      1024: {
        perView: 2,
      },
      640: {
        perView: 1,
      },
    },
  }).mount();
</script>
