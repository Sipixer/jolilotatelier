---
type Variant = "default" | "outline" | "ghost" | "link";
type Size = "default" | "sm" | "lg" | "icon";

const {
  variant = "default",
  size = "default",
  class: className = "",
  ...props
}: {
  variant?: Variant;
  size?: Size;
  class?: string;
  [key: string]: any;
} = Astro.props;

const variants = {
  default: "bg-primary text-primary-foreground hover:bg-primary/90",
  outline:
    "border border-input bg-background hover:bg-accent hover:text-accent-foreground",
  ghost: "hover:bg-accent hover:text-accent-foreground",
  link: "underline-offset-4 hover:underline text-primary",
  secondary: "bg-accent text-primary-foreground hover:bg-primary",
};

const sizes = {
  default: "h-10 py-2 px-4",
  sm: "h-9 px-3 ",
  lg: "h-11 px-8 ",
  icon: "h-10 w-10",
};

const base =
  "inline-flex items-center justify-center font-light text-sm  transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none ring-offset-background";
---

<button
  class={`${base} ${variants[variant] ?? variants.default} ${sizes[size] ?? sizes.default} ${className}`}
  {...props}
>
  <slot />
</button>
